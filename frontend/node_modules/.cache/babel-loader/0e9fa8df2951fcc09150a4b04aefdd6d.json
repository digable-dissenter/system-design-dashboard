{"ast":null,"code":"import VueMultiselect from 'vue-multiselect';\nimport { useStore } from 'vuex';\nimport { computed } from '@vue/runtime-core';\nexport default {\n  name: 'Sectors',\n  components: {\n    VueMultiselect\n  },\n\n  setup() {\n    const store = useStore();\n    return {\n      indices: computed(() => store.state.indices.indexTypeIndices),\n      indexTypes: computed(() => store.state.indices.indexTypes),\n      dates: computed(() => store.getters['dates/transformedDates']),\n      getIndexTypeIndices: (indexType, date) => store.dispatch('indices/getIndexTypeIndices', {\n        indexType,\n        date\n      }),\n      resetState: () => store.dispatch('indices/resetState')\n    };\n  },\n\n  data() {\n    return {\n      currentIndexType: '',\n      currentDate: '',\n      isDisplayClicked: false\n    };\n  },\n\n  computed: {\n    isNoIndex() {\n      return !this.indices[0] && this.isDisplayClicked;\n    }\n\n  },\n  methods: {\n    handleBetaColor(pValue, beta) {\n      let betaColor = '';\n\n      if (beta < 0) {\n        return betaColor = 'red';\n      }\n\n      switch (true) {\n        case pValue < 0.01 && this.handleBetaEqualToZero(beta) !== 0:\n          betaColor = 'green';\n          break;\n\n        case pValue < 0.05 && this.handleBetaEqualToZero(beta) !== 0:\n          betaColor = 'blue';\n          break;\n\n        default:\n          break;\n      }\n\n      return betaColor;\n    },\n\n    handleBetaEqualToZero(beta) {\n      return Math.round(beta * 10000) / 10000;\n    },\n\n    handleClick(indexType, date) {\n      this.isDisplayClicked = true;\n      this.getIndexTypeIndices(indexType, date);\n    }\n\n  },\n\n  beforeUnmount() {\n    this.resetState();\n  }\n\n};","map":{"version":3,"mappings":"AAmHA,OAAOA,cAAP,MAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,eAAe;EACbC,IAAI,EAAE,SADO;EAEbC,UAAU,EAAE;IACVJ;EADU,CAFC;;EAKbK,KAAK,GAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,EAAtB;IAEA,OAAO;MACLM,OAAO,EAAEL,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAN,CAAYD,OAAZ,CAAoBE,gBAA3B,CADZ;MAELC,UAAU,EAAER,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAN,CAAYD,OAAZ,CAAoBG,UAA3B,CAFf;MAGLC,KAAK,EAAET,QAAQ,CAAC,MAAMI,KAAK,CAACM,OAAN,CAAc,wBAAd,CAAP,CAHV;MAILC,mBAAmB,EAAE,CAACC,SAAD,EAAYC,IAAZ,KACnBT,KAAK,CAACU,QAAN,CAAe,6BAAf,EAA8C;QAAEF,SAAF;QAAaC;MAAb,CAA9C,CALG;MAMLE,UAAU,EAAE,MAAMX,KAAK,CAACU,QAAN,CAAe,oBAAf;IANb,CAAP;EAQD,CAhBY;;EAiBbE,IAAI,GAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EADb;MAELC,WAAW,EAAE,EAFR;MAGLC,gBAAgB,EAAE;IAHb,CAAP;EAKD,CAvBY;;EAwBbnB,QAAQ,EAAE;IACRoB,SAAS,GAAG;MACV,OAAO,CAAC,KAAKf,OAAL,CAAa,CAAb,CAAD,IAAoB,KAAKc,gBAAhC;IACD;;EAHO,CAxBG;EA6BbE,OAAO,EAAE;IACPC,eAAe,CAACC,MAAD,EAASC,IAAT,EAAe;MAC5B,IAAIC,SAAQ,GAAI,EAAhB;;MACA,IAAID,IAAG,GAAI,CAAX,EAAc;QACZ,OAAQC,SAAQ,GAAI,KAApB;MACF;;MACA,QAAQ,IAAR;QACE,KAAKF,MAAK,GAAI,IAAT,IAAiB,KAAKG,qBAAL,CAA2BF,IAA3B,MAAqC,CAA3D;UACEC,SAAQ,GAAI,OAAZ;UACA;;QACF,KAAKF,MAAK,GAAI,IAAT,IAAiB,KAAKG,qBAAL,CAA2BF,IAA3B,MAAqC,CAA3D;UACEC,SAAQ,GAAI,MAAZ;UACA;;QACF;UACE;MARJ;;MAWA,OAAOA,SAAP;IACD,CAlBM;;IAmBPC,qBAAqB,CAACF,IAAD,EAAO;MAC1B,OAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAG,GAAI,KAAlB,IAA2B,KAAlC;IACD,CArBM;;IAsBPK,WAAW,CAACjB,SAAD,EAAYC,IAAZ,EAAkB;MAC3B,KAAKM,gBAAL,GAAwB,IAAxB;MACA,KAAKR,mBAAL,CAAyBC,SAAzB,EAAoCC,IAApC;IACD;;EAzBM,CA7BI;;EAwDbiB,aAAa,GAAG;IACd,KAAKf,UAAL;EACD;;AA1DY,CAAf","names":["VueMultiselect","useStore","computed","name","components","setup","store","indices","state","indexTypeIndices","indexTypes","dates","getters","getIndexTypeIndices","indexType","date","dispatch","resetState","data","currentIndexType","currentDate","isDisplayClicked","isNoIndex","methods","handleBetaColor","pValue","beta","betaColor","handleBetaEqualToZero","Math","round","handleClick","beforeUnmount"],"sourceRoot":"","sources":["C:\\users\\kenneth\\aifmrm_ers project\\system-design-dashboard\\frontend\\src\\views\\Indices.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <h1>Indices</h1>\r\n    <div class=\"select-container\">\r\n      <p>\r\n        <strong\r\n          >Select <span v-if=\"!indices[0]\">an</span\r\n          ><span v-if=\"indices[0]\">a new</span> index type</strong\r\n        >\r\n      </p>\r\n\r\n      <VueMultiselect\r\n        v-model=\"currentIndexType\"\r\n        :options=\"indexTypes\"\r\n        :searchable=\"true\"\r\n        label=\"index_type\"\r\n        :allow-empty=\"false\"\r\n        placeholder=\"Select an index type\"\r\n      />\r\n\r\n      <p>\r\n        <strong>Select a <span v-if=\"indices[0]\">new </span>date</strong>\r\n      </p>\r\n      <VueMultiselect\r\n        v-model=\"currentDate\"\r\n        :options=\"dates\"\r\n        :searchable=\"false\"\r\n        :allow-empty=\"false\"\r\n        placeholder=\"Select a date\"\r\n      />\r\n\r\n      <div class=\"button-container\">\r\n        <button\r\n          @click=\"handleClick(currentIndexType.index_type, currentDate)\"\r\n          :disabled=\"!currentIndexType || !currentDate\"\r\n        >\r\n          <span v-if=\"!indices[0]\">Display Table</span>\r\n          <span v-else>Update Table</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <table v-if=\"indices[0]\" class=\"table-container\">\r\n      <caption>\r\n        {{\r\n          currentIndexType.index_type\r\n        }}\r\n        Table\r\n        <br />\r\n        <div class=\"table-legend\">\r\n          <p><span class=\"green\">green</span> - 99% confidence interval</p>\r\n          <p><span class=\"blue\">blue</span> - 95% confidence interval</p>\r\n          <p><span class=\"red\">red</span> - negative value</p>\r\n        </div>\r\n      </caption>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Code</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Data Points</th>\r\n          <th scope=\"col\">Beta(J200)</th>\r\n          <th scope=\"col\">Beta(J203)</th>\r\n          <th scope=\"col\">Beta(J250)</th>\r\n          <th scope=\"col\">Beta(J257)</th>\r\n          <th scope=\"col\">Beta(J258)</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr v-for=\"entry in indices\" :key=\"entry\">\r\n          <td scope=\"row\" data-label=\"Code\">\r\n            <span>{{ entry.instrument }} </span>\r\n          </td>\r\n          <td data-label=\"Name\">{{ entry.index_name }}</td>\r\n          <td data-label=\"Data Points\">{{ entry.data_points }}</td>\r\n          <td\r\n            data-label=\"Beta(J200)\"\r\n            :class=\"handleBetaColor(entry.j200_p_value, entry.j200_beta)\"\r\n          >\r\n            {{ entry.j200_beta ? entry.j200_beta.toFixed(2) : 0 }}\r\n          </td>\r\n          <td\r\n            data-label=\"Beta(J203)\"\r\n            :class=\"handleBetaColor(entry.j203_p_value, entry.j203_beta)\"\r\n          >\r\n            {{ entry.j203_beta ? entry.j203_beta.toFixed(2) : 0 }}\r\n          </td>\r\n          <td\r\n            data-label=\"Beta(J250)\"\r\n            :class=\"handleBetaColor(entry.j250_p_value, entry.j250_beta)\"\r\n          >\r\n            {{ entry.j250_beta ? entry.j250_beta.toFixed(2) : 0 }}\r\n          </td>\r\n          <td\r\n            data-label=\"Beta(J257)\"\r\n            :class=\"handleBetaColor(entry.j257_p_value, entry.j257_beta)\"\r\n          >\r\n            {{ entry.j257_beta ? entry.j257_beta.toFixed(2) : 0 }}\r\n          </td>\r\n          <td\r\n            data-label=\"Beta(J258)\"\r\n            :class=\"handleBetaColor(entry.j258_p_value, entry.j258_beta)\"\r\n          >\r\n            {{ entry.j258_beta ? entry.j258_beta.toFixed(2) : 0 }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div v-if=\"isNoIndex\" class=\"no-shares-message\">\r\n      Unfortunately no index falls under this index type for this date selection\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueMultiselect from 'vue-multiselect'\r\nimport { useStore } from 'vuex'\r\nimport { computed } from '@vue/runtime-core'\r\n\r\nexport default {\r\n  name: 'Sectors',\r\n  components: {\r\n    VueMultiselect,\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    return {\r\n      indices: computed(() => store.state.indices.indexTypeIndices),\r\n      indexTypes: computed(() => store.state.indices.indexTypes),\r\n      dates: computed(() => store.getters['dates/transformedDates']),\r\n      getIndexTypeIndices: (indexType, date) =>\r\n        store.dispatch('indices/getIndexTypeIndices', { indexType, date }),\r\n      resetState: () => store.dispatch('indices/resetState'),\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentIndexType: '',\r\n      currentDate: '',\r\n      isDisplayClicked: false,\r\n    }\r\n  },\r\n  computed: {\r\n    isNoIndex() {\r\n      return !this.indices[0] && this.isDisplayClicked\r\n    },\r\n  },\r\n  methods: {\r\n    handleBetaColor(pValue, beta) {\r\n      let betaColor = ''\r\n      if (beta < 0) {\r\n        return (betaColor = 'red')\r\n      }\r\n      switch (true) {\r\n        case pValue < 0.01 && this.handleBetaEqualToZero(beta) !== 0:\r\n          betaColor = 'green'\r\n          break\r\n        case pValue < 0.05 && this.handleBetaEqualToZero(beta) !== 0:\r\n          betaColor = 'blue'\r\n          break\r\n        default:\r\n          break\r\n      }\r\n\r\n      return betaColor\r\n    },\r\n    handleBetaEqualToZero(beta) {\r\n      return Math.round(beta * 10000) / 10000\r\n    },\r\n    handleClick(indexType, date) {\r\n      this.isDisplayClicked = true\r\n      this.getIndexTypeIndices(indexType, date)\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    this.resetState()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.page-container {\r\n  @media (max-width: 800px) {\r\n    margin: 2rem 10%;\r\n  }\r\n\r\n  margin: 2rem 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    margin-bottom: 48px;\r\n  }\r\n\r\n  .select-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 400px;\r\n\r\n    @media (max-width: 800px) {\r\n      width: 100%;\r\n    }\r\n\r\n    .button-container {\r\n      margin: 3rem 0 1rem 0;\r\n    }\r\n  }\r\n\r\n  .red {\r\n    color: red;\r\n  }\r\n\r\n  .blue {\r\n    color: rgb(0, 153, 255);\r\n  }\r\n\r\n  .green {\r\n    color: rgb(99, 206, 99);\r\n  }\r\n\r\n  .table-container {\r\n    margin-top: 36px;\r\n\r\n    .table-legend {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      font-size: 16px;\r\n\r\n      p {\r\n        margin: 2px;\r\n      }\r\n\r\n      @media (max-width: 800px) {\r\n        align-items: center;\r\n\r\n        p {\r\n          margin: 4px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}